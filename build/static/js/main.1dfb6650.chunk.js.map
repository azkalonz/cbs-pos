{"version":3,"sources":["components/LayoutProvider.js","components/SearchInput.js","components/Scrollbar.js","components/NavBar.js","components/Header.js","components/Card.js","screens/Home.js","screens/PageNotFound.js","styles/index.js","App.js","serviceWorker.js","utils/reducers.js","utils/store.js","index.js"],"names":["useStyles","makeStyles","theme","navBar","width","minWidth","overflow","transition","borderRight","palette","divider","marginLeft","LayoutProvider","props","useState","isNavOpen","setNavOpen","styles","Fragment","Box","display","height","className","join","navbar","header","nav","toggleNav","p","children","SearchProduct","searchRef","useRef","search","setSearch","isFocused","setFocused","input","useMemo","current","querySelector","resetSearch","useCallback","value","position","TextField","ref","type","variant","fullWidth","onChange","e","target","toLowerCase","onFocus","onBlur","length","style","background","maxWidth","float","IconButton","onClick","right","top","Icon","Slide","in","bgcolor","component","Paper","Typography","Divider","List","Array","fill","map","a","i","ListItem","button","key","ListItemText","primary","primaryTypographyProps","color","Backdrop","open","SearchInput","Scrollbar","createMenu","name","path","dashboardMenu","NavBar","pathname","history","location","flexDirection","Toolbar","disableGutters","src","padding","autoHide","m","selected","push","Header","AppBar","borderLeft","justifyContent","alignItems","find","q","placeholder","CardContent","secondary","Card","Home","PageNotFound","createMuiTheme","overrides","MuiToolbar","root","minHeight","TOOLBAR_HEIGHT","MuiTouchRipple","child","backgroundColor","MuiListItem","MuiTextField","paddingTop","paddingBottom","MuiTypography","textOverflow","main","App","ThemeProvider","Theme","exact","Boolean","window","hostname","match","combineReducers","require","createStore","reducers","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1dfb6650.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Box, makeStyles } from \"@material-ui/core\";\r\n\r\nconst NAVBAR_WIDTH = 250;\r\n\r\nfunction LayoutProvider(props) {\r\n  const [isNavOpen, setNavOpen] = useState(true);\r\n  const toggleNav = () => {\r\n    setNavOpen(!isNavOpen);\r\n  };\r\n  const styles = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Box display=\"flex\" height=\"100vh\" overflow=\"hidden\">\r\n        <Box className={[styles.navBar, isNavOpen ? \"opened\" : \"\"].join(\" \")}>\r\n          <props.navbar {...props} />\r\n        </Box>\r\n        <Box width=\"100%\">\r\n          <Box>\r\n            <props.header nav={{ toggleNav }} {...props} />\r\n          </Box>\r\n          <Box p={2}>{props.children}</Box>\r\n        </Box>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  navBar: {\r\n    width: NAVBAR_WIDTH,\r\n    minWidth: NAVBAR_WIDTH,\r\n    overflow: \"hidden\",\r\n    transition: \"margin .4s ease-out\",\r\n    borderRight: \"1px solid \" + theme.palette.divider,\r\n    marginLeft: -NAVBAR_WIDTH,\r\n    \"&.opened\": {\r\n      marginLeft: 0,\r\n      overflow: \"auto\",\r\n    },\r\n  },\r\n}));\r\nexport default LayoutProvider;\r\n","import {\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Backdrop,\r\n  Slide,\r\n  IconButton,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useRef, useCallback, useMemo } from \"react\";\r\n\r\nfunction SearchInput(props) {\r\n  return <TextField type=\"text\" variant=\"outlined\" {...props} />;\r\n}\r\nexport function SearchProduct(props) {\r\n  const searchRef = useRef();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [isFocused, setFocused] = useState(false);\r\n  const input = useMemo(() => searchRef?.current?.querySelector(\"input\"), [\r\n    searchRef,\r\n    search,\r\n  ]);\r\n  const resetSearch = useCallback(() => {\r\n    setSearch(\"\");\r\n    setFocused(false);\r\n    if (input) input.value = \"\";\r\n  }, [searchRef, search]);\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value.toLowerCase());\r\n    if (props.onChange) props.onChange(e.target.value);\r\n  };\r\n  const onFocus = () => {\r\n    setFocused(true);\r\n  };\r\n  return (\r\n    <Box position=\"relative\">\r\n      <Box position=\"relative\">\r\n        <TextField\r\n          ref={searchRef}\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          {...props}\r\n          fullWidth\r\n          onChange={handleChange}\r\n          onFocus={() => onFocus()}\r\n          onBlur={() => !search.length && setFocused(false)}\r\n          style={{\r\n            background: \"#fff\",\r\n            maxWidth: !isFocused ? \"70%\" : \"100%\",\r\n            float: \"right\",\r\n          }}\r\n        />\r\n        {isFocused && !!search.length && (\r\n          <IconButton\r\n            onClick={resetSearch}\r\n            style={{ position: \"absolute\", right: 0, top: 6, height: \"100%\" }}\r\n          >\r\n            <Icon>close</Icon>\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n      <Slide in={!!search.length}>\r\n        <Box\r\n          position=\"absolute\"\r\n          width=\"150%\"\r\n          bgcolor=\"#fff\"\r\n          component={Paper}\r\n          top={50}\r\n          right={0}\r\n        >\r\n          <Box p={1}>\r\n            <Typography className=\"title\">Results</Typography>\r\n          </Box>\r\n          <Divider />\r\n          <List>\r\n            {new Array(4).fill(1).map((a, i) => (\r\n              <ListItem button key={i}>\r\n                <ListItemText\r\n                  primary=\"Product Name\"\r\n                  primaryTypographyProps={{ style: { color: \"#222\" } }}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      </Slide>\r\n      <Backdrop\r\n        onClick={resetSearch}\r\n        open={!!search.length}\r\n        style={{ background: \"rgba(0,0,0,0.2)\" }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SearchInput;\r\n","import React from \"react\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\n\r\nexport default function Scrollbar(props) {\r\n  return <Scrollbars {...props}>{props.children}</Scrollbars>;\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  ListItemText,\r\n  ListItem,\r\n  Box,\r\n  Toolbar,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport Scrollbar from \"./Scrollbar\";\r\n\r\nconst createMenu = (name, path) => ({ name, path });\r\n\r\nexport const getCurrentMenu = (path) => {\r\n  return dashboardMenu.find((q) => q.path === path);\r\n};\r\nexport const dashboardMenu = [\r\n  createMenu(\"Dashboard\", \"/\"),\r\n  createMenu(\"Inventory\", \"/inventory\"),\r\n];\r\nfunction NavBar(props) {\r\n  const { pathname } = props.history?.location || {};\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n      <Toolbar disableGutters>\r\n        <img src=\"/static/logo.png\" height=\"70%\" style={{ padding: 5 }} />\r\n        <Typography className=\"title\">CEBU BAKERY SUPPLY</Typography>\r\n      </Toolbar>\r\n      <Divider />\r\n      <Box overflow=\"auto\" height=\"100%\" className=\"nav-list\">\r\n        <Scrollbar autoHide>\r\n          <List>\r\n            {dashboardMenu.map((m, i) => (\r\n              <ListItem\r\n                button\r\n                key={i}\r\n                divider\r\n                selected={pathname === m.path}\r\n                onClick={() => props.history?.push(m.path)}\r\n              >\r\n                <ListItemText primary={m.name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Scrollbar>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import {\r\n  AppBar,\r\n  Icon,\r\n  IconButton,\r\n  Toolbar,\r\n  Box,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { SearchProduct } from \"./SearchInput\";\r\nimport { getCurrentMenu } from \"./NavBar\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <AppBar\r\n      variant=\"outlined\"\r\n      position=\"sticky\"\r\n      style={{ background: \"#fff\", borderLeft: 0, color: \"#000\" }}\r\n    >\r\n      <Box component={Toolbar} display=\"flex\" justifyContent=\"space-between\">\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <IconButton onClick={props.nav.toggleNav}>\r\n            <Icon>menu</Icon>\r\n          </IconButton>\r\n          <Typography className=\"title\">\r\n            {getCurrentMenu(props.history.location.pathname)?.name}\r\n          </Typography>\r\n        </Box>\r\n        <SearchProduct placeholder=\"Search Product\" />\r\n      </Box>\r\n    </AppBar>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Box, Paper, Typography } from \"@material-ui/core\";\r\n\r\nexport function CardContent(props) {\r\n  return (\r\n    <Box className=\"content\" width=\"100%\">\r\n      <Typography className=\"primary\">{props.primary}</Typography>\r\n      <Typography className=\"secondary\">{props.secondary}</Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function Card(props) {\r\n  return (\r\n    <Box\r\n      component={Paper}\r\n      className={[\"card\", props.color].join(\" \")}\r\n      style={{ width: props.width }}\r\n    >\r\n      {props.children}\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LayoutProvider from \"../components/LayoutProvider\";\r\nimport Header from \"../components/Header\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport Card, { CardContent } from \"../components/Card\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <LayoutProvider header={Header} navbar={NavBar} {...props}>\r\n      <Box display=\"flex\" width=\"100%\" overflow=\"auto\">\r\n        <Card color=\"maroon-yellow\">\r\n          <CardContent primary=\"2000\" secondary=\"Total Sales\" />\r\n        </Card>\r\n      </Box>\r\n    </LayoutProvider>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction PageNotFound(props) {\r\n  return <div>Page Not Found</div>;\r\n}\r\n\r\nexport default PageNotFound;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\nconst TOOLBAR_HEIGHT = 60;\r\nconst TEXTFIELD_HEIGHT = 34;\r\nconst PRIMARY_COLOR = \"#7e1316\";\r\nconst SECONDARY_COLOR = \"#ffb100\";\r\nconst SELECTED_ITEM = \"rgba(0,0,0,0.3)\";\r\nexport default createMuiTheme({\r\n  overrides: {\r\n    MuiToolbar: {\r\n      root: {\r\n        height: TOOLBAR_HEIGHT,\r\n        minHeight: TOOLBAR_HEIGHT + \"px!important\",\r\n      },\r\n    },\r\n    MuiTouchRipple: {\r\n      child: {\r\n        backgroundColor: SECONDARY_COLOR,\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      root: {\r\n        \"&.Mui-selected\": {\r\n          backgroundColor: SELECTED_ITEM,\r\n        },\r\n      },\r\n    },\r\n    MuiTextField: {\r\n      root: {\r\n        height: TEXTFIELD_HEIGHT,\r\n        transition: \"all 0.2s ease-out\",\r\n        \"& input\": {\r\n          paddingTop: 0,\r\n          paddingBottom: 0,\r\n          height: TEXTFIELD_HEIGHT,\r\n        },\r\n      },\r\n    },\r\n    MuiTypography: {\r\n      root: {\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n      },\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: PRIMARY_COLOR,\r\n    },\r\n    secondary: {\r\n      main: SECONDARY_COLOR,\r\n    },\r\n  },\r\n});\r\n","import { ThemeProvider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./screens/Home\";\r\nimport PageNotFound from \"./screens/PageNotFound\";\r\nimport Theme from \"./styles\";\r\nimport \"./styles/style.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={Theme}>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/inventory\" component={Home} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const { combineReducers } = require(\"redux\");\r\n\r\nexport default combineReducers({});\r\n","import { createStore } from \"redux\";\r\nimport reducers from \"./reducers\";\r\nexport default createStore(reducers);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./utils/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}