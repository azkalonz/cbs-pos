{"version":3,"sources":["components/LayoutProvider.js","components/SearchInput.js","components/Header.js","components/NavBar.js","screens/Home.js","screens/PageNotFound.js","styles/index.js","App.js","serviceWorker.js","utils/reducers.js","utils/store.js","index.js"],"names":["useStyles","makeStyles","theme","navBar","width","overflow","transition","borderRight","palette","divider","marginLeft","LayoutProvider","props","useState","isNavOpen","setNavOpen","styles","Fragment","Box","display","height","className","join","navbar","header","nav","toggleNav","p","children","SearchProduct","searchRef","useRef","search","setSearch","isFocused","setFocused","resetSearch","useCallback","input","current","querySelector","value","position","TextField","ref","type","variant","onChange","e","target","toLowerCase","onFocus","onBlur","length","IconButton","onClick","style","right","top","Icon","Slide","in","bgcolor","component","Paper","Typography","Divider","List","Array","fill","map","a","i","ListItem","button","key","ListItemText","primary","primaryTypographyProps","color","Backdrop","open","background","Header","AppBar","borderLeft","Toolbar","placeholder","createMenu","name","path","menu","NavBar","pathname","history","location","flexDirection","disableGutters","src","padding","m","selected","push","Home","PageNotFound","createMuiTheme","overrides","MuiToolbar","root","minHeight","TOOLBAR_HEIGHT","MuiTouchRipple","child","backgroundColor","MuiListItem","MuiTextField","paddingTop","paddingBottom","main","secondary","App","ThemeProvider","Theme","exact","Boolean","window","hostname","match","combineReducers","require","createStore","reducers","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.91da3899.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Box, makeStyles } from \"@material-ui/core\";\r\n\r\nconst NAVBAR_WIDTH = 340;\r\n\r\nfunction LayoutProvider(props) {\r\n  const [isNavOpen, setNavOpen] = useState(true);\r\n  const toggleNav = () => {\r\n    setNavOpen(!isNavOpen);\r\n  };\r\n  const styles = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Box display=\"flex\" height=\"100vh\">\r\n        <Box className={[styles.navBar, isNavOpen ? \"opened\" : \"\"].join(\" \")}>\r\n          <props.navbar {...props} />\r\n        </Box>\r\n        <Box width=\"100%\">\r\n          <Box>\r\n            <props.header nav={{ toggleNav }} {...props} />\r\n          </Box>\r\n          <Box p={2}>{props.children}</Box>\r\n        </Box>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  navBar: {\r\n    width: NAVBAR_WIDTH,\r\n    overflow: \"hidden\",\r\n    transition: \"margin .4s ease-out\",\r\n    borderRight: \"1px solid \" + theme.palette.divider,\r\n    marginLeft: -NAVBAR_WIDTH,\r\n    \"&.opened\": {\r\n      marginLeft: 0,\r\n      overflow: \"auto\",\r\n    },\r\n  },\r\n}));\r\nexport default LayoutProvider;\r\n","import {\r\n  TextField,\r\n  Box,\r\n  Typography,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Backdrop,\r\n  Slide,\r\n  IconButton,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useRef, useCallback } from \"react\";\r\n\r\nfunction SearchInput(props) {\r\n  return <TextField type=\"text\" variant=\"outlined\" {...props} />;\r\n}\r\nexport function SearchProduct(props) {\r\n  const searchRef = useRef();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [isFocused, setFocused] = useState(false);\r\n  const resetSearch = useCallback(() => {\r\n    setSearch(\"\");\r\n    setFocused(false);\r\n    let input = searchRef?.current?.querySelector(\"input\");\r\n    if (input) input.value = \"\";\r\n  }, [searchRef, search]);\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value.toLowerCase());\r\n    if (props.onChange) props.onChange(e.target.value);\r\n  };\r\n  return (\r\n    <Box position=\"relative\">\r\n      <Box position=\"relative\">\r\n        <TextField\r\n          ref={searchRef}\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          {...props}\r\n          onChange={handleChange}\r\n          onFocus={() => setFocused(true)}\r\n          onBlur={() => !search.length && setFocused(false)}\r\n        />\r\n        {isFocused && !!search.length && (\r\n          <IconButton\r\n            onClick={resetSearch}\r\n            style={{ position: \"absolute\", right: 0, top: 0, height: \"100%\" }}\r\n          >\r\n            <Icon>close</Icon>\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n      <Slide in={!!search.length}>\r\n        <Box position=\"absolute\" width=\"150%\" bgcolor=\"#fff\" component={Paper}>\r\n          <Box p={1}>\r\n            <Typography className=\"title\">Results</Typography>\r\n          </Box>\r\n          <Divider />\r\n          <List>\r\n            {new Array(4).fill(1).map((a, i) => (\r\n              <ListItem button key={i}>\r\n                <ListItemText\r\n                  primary=\"Home\"\r\n                  primaryTypographyProps={{ style: { color: \"#222\" } }}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      </Slide>\r\n      <Backdrop\r\n        onClick={resetSearch}\r\n        open={!!search.length}\r\n        style={{ background: \"transparent\" }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SearchInput;\r\n","import { AppBar, Icon, IconButton, Toolbar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { SearchProduct } from \"./SearchInput\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <AppBar\r\n      variant=\"outlined\"\r\n      position=\"sticky\"\r\n      style={{ background: \"#fff\", borderLeft: 0 }}\r\n    >\r\n      <Toolbar>\r\n        <IconButton onClick={props.nav.toggleNav}>\r\n          <Icon>menu</Icon>\r\n        </IconButton>\r\n        <SearchProduct placeholder=\"Search Product\" />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  ListItemText,\r\n  ListItem,\r\n  Box,\r\n  Toolbar,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nconst createMenu = (name, path) => ({ name, path });\r\nconst menu = [\r\n  createMenu(\"Dashboard\", \"/\"),\r\n  createMenu(\"Inventory\", \"/inventory\"),\r\n];\r\nfunction NavBar(props) {\r\n  const { pathname } = props.history?.location || {};\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\r\n      <Toolbar disableGutters>\r\n        <img src=\"/static/logo.png\" height=\"70%\" style={{ padding: 5 }} />\r\n        <Typography className=\"title\">CEBU BAKERY SUPPLY</Typography>\r\n      </Toolbar>\r\n      <Divider />\r\n      <Box overflow=\"auto\" height=\"100%\">\r\n        <List>\r\n          {menu.map((m, i) => (\r\n            <ListItem\r\n              button\r\n              key={i}\r\n              selected={pathname === m.path}\r\n              onClick={() => props.history?.push(m.path)}\r\n            >\r\n              <ListItemText primary={m.name} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport LayoutProvider from \"../components/LayoutProvider\";\r\nimport Header from \"../components/Header\";\r\nimport NavBar from \"../components/NavBar\";\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <LayoutProvider header={Header} navbar={NavBar} {...props}>\r\n      <div>Home</div>\r\n    </LayoutProvider>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction PageNotFound(props) {\r\n  return <div>Page Not Found</div>;\r\n}\r\n\r\nexport default PageNotFound;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\nconst TOOLBAR_HEIGHT = 60;\r\nconst TEXTFIELD_HEIGHT = 34;\r\nconst PRIMARY_COLOR = \"#7e1316\";\r\nconst SECONDARY_COLOR = \"#ffb100\";\r\nexport default createMuiTheme({\r\n  overrides: {\r\n    MuiToolbar: {\r\n      root: {\r\n        height: TOOLBAR_HEIGHT,\r\n        minHeight: TOOLBAR_HEIGHT + \"px!important\",\r\n      },\r\n    },\r\n    MuiTouchRipple: {\r\n      child: {\r\n        backgroundColor: SECONDARY_COLOR,\r\n      },\r\n    },\r\n    MuiListItem: {\r\n      root: {\r\n        \"&.Mui-selected\": {\r\n          backgroundColor: SECONDARY_COLOR,\r\n        },\r\n      },\r\n    },\r\n    MuiTextField: {\r\n      root: {\r\n        height: TEXTFIELD_HEIGHT,\r\n        \"& input\": {\r\n          paddingTop: 0,\r\n          paddingBottom: 0,\r\n          height: TEXTFIELD_HEIGHT,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: PRIMARY_COLOR,\r\n    },\r\n    secondary: {\r\n      main: SECONDARY_COLOR,\r\n    },\r\n  },\r\n});\r\n","import { ThemeProvider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./screens/Home\";\r\nimport PageNotFound from \"./screens/PageNotFound\";\r\nimport Theme from \"./styles\";\r\nimport \"./styles/style.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={Theme}>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/inventory\" component={Home} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const { combineReducers } = require(\"redux\");\r\n\r\nexport default combineReducers({});\r\n","import { createStore } from \"redux\";\r\nimport reducers from \"./reducers\";\r\nexport default createStore(reducers);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./utils/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}